// Variables
$color-primary: #55c57a;
$color-primary-light: #7ed56f;
$color-primary-dark: #28b485;
$color-grey-dark: #777;
$color-white: #fff;

// Universal style reset 
*,
*::before,
*::after {
    margin: 0;
    padding: 0;
    box-sizing: inherit; // to inherit border-box sizing from body style  
}

// To establish global measuring units
html {
    font-size: 62.5%; // assumes a 16px default browser font-size; equiv to 10px 
}

// Basic body styles 
body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size: 1.6rem;
    line-height: 1.7;
    color: $color-grey-dark;
    padding: 3rem; // 30px white border around entire page 
    box-sizing: border-box;
}

// Header styles 
.header {
    height: 95vh;
    background-image: linear-gradient(to right bottom,
        rgba($color-primary-light, 0.8), 
        rgba($color-primary-dark, 0.8)), 
    url("../img/hero.jpg");
    background-size: cover;
    background-position: top;
    position: relative;
    clip-path: polygon(0 0, 100% 0, 100% 75%, 0 100%); // clip the image 
}

.header__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
}

.header__logo {
    height: 3.5rem;
}

.header__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%); // To center the div containing the headline 
    text-align: center;
}

.heading-primary {
    color: $color-white;
    text-transform: uppercase;
    backface-visibility: hidden; // correct shake at end of animating element 
    margin-bottom: 6rem;
}

.heading-primary--main {
    display: block;
    font-size: 6rem;
    font-weight: 400;
    letter-spacing: 3.5rem;

    animation: moveInLeft 1s ease-out;

    // Examples only--not used
    animation-iteration-count: 3;
    animation-delay: 3s;
    
}

.heading-primary--sub {
    display: block;
    font-size: 2rem;
    font-weight: 700;
    letter-spacing: 1.75rem;

    animation: moveInRight 1s ease-out;
}

@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-10rem)
    }

    80% {
        transform: translateX(1rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(10rem)
    }

    80% {
        transform: translateX(-1rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

@keyframes moveInBottom {
    0% {
        opacity: 0;
        transform: translateY(10rem)
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

.btn:link,
.bth:visited { // use of pseudoclass state 
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block;
    border-radius: 10rem;
    transition: all .2; //  transition on initial state 
    position: relative; // necessary for psuedo element 
    font-size: 1.6rem;
}

.btn:hover {
    transform: translateY(-.3rem);
    box-shadow: 0 1rem 2rem rgba(0,0,0,.2);
}

.btn:active {
    transform: translateY(-.1rem);
    box-shadow: 0 .5rem 1rem rgba(0,0,0,.2);
}

.btn--white {
    background-color: $color-white;
    color: $color-grey-dark;
}

.btn::after {
    content: ""; // must be present for any pseudo element 
    display: inline-block; // must be present for pseudo, matches existing display property 
    height: 100%;
    width: 100%;
    border-radius: 10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s;
}

.btn--white::after {
    background-color: $color-white;
}

.btn:hover::after {
    transform: scaleX(1.4) scaleY(1.6);
    opacity: 0;
}

.btn--animated {
    animation: moveInBottom .5s ease-out .75s;
    animation-fill-mode: backwards;
}